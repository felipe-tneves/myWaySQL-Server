Formação de Banco de dados - SQL Server 2017

Instalar o SQL Server 2017
Instalar o SQL Server Management Studio 2017
Configurar o SQL Server 2017

A mexer com o SQL Server Management Studio, tendo o primeiro contato com o mesmo;
A criar banco de dados, tanto por script quanto pelo assistente;
Como apagar um banco de dados.

Os tipos de dados que compõem uma tabela;
Como criar uma tabela, tanto por script quanto por assistente;
Como apagar uma tabela.

Como incluir dados em uma tabela de diversas formas;
Como alterar um dado já existente na tabela;
Como apagar um dado;
A importância das chaves primárias e o cuidado que temos ter ao criá-las;
A manipular campos lógicos e de datas.


Como visualizar os dados de uma tabela;
Como segregar a seleção de dados;
A usar as condições de maior e menor na seleção de dados da tabela;
Como filtrar dados através de datas.


Tipos de campos:

Numéricos Exatos
- Bigint 8 bytes
- Numeric 5 a 17 bytes - decimal co  precisão e escala fixos. Esta previsão varia de 1 a 38 casas decimais. o tamanho do campo depende do número de casas decimais 5 casas(1,00000)
- Bit - aceita valores 1, 0 ou nulo.
- Smallint - 4 bytes
- Decimal - igual a Numeric
- Smallmoney - representa valores monetários ou moedas. Menor 
- Int - 4 bytes
- Tinyint - 0 a 255.
- Money - Representa valores monetários ou moedas. Maior

Numéricos Aproximados: Números usados como ponto flutuante ( Aproximados ).
- Float - Tamanho depende do valor.
- Real - 4 bytes.

Data e Hora:
- Data - 0001-01-01 a 9999-12-31
- DateTimeOffset - Data com hora, minutos e segundos com reconhecimento de fuso horário.
- DateTime2 - Data com hora e minutos expressa de 0 a 24
- Smalldate - Data com hora expressa de 0 a 24
- DateTime - Data com hora, minutos e segundos expressa de 0 a 24
- Time - Hora, minutos e segundos expressas de 0 a 24

Caracteres:
- Char - Cadeia de caracteres não Unicode com valor fixo (de 1 a 8000)
- Varchar - Cadeia de caracteres não Unicode com valor variável (de 1 a 8000). Podemos usar o tamanho MAX que representa 2^31-1 bytes (2GBytes).
- Texto - Dados não Unicode de comprimento variável para armazenar dados grandes ou binários.

Caracteres Unicodes:
- nChar - Cadeia de caracteres não Unicode com valor fixo (de 1 a 8000)
- nVarchar - Cadeia de caracteres não Unicode com valor variável (de 1 a 8000). Podemos usar o tamanho MAX que representa 2^31-1 bytes (2GBytes).
- nTexto - Dados não Unicode de comprimento variável para armazenar dados grandes ou binários.

Unicode - Fornece um único conjunto de caracteres contendo os idiomas do mundo.

Caracteres Binários
- Binário - Cadeia de caracteres específico para armazenamento binário. Varia de 1 a 8000
- VarBinário - Cadeia de caracteres específicos para armazenar binário. Varia até 2 ^31 1 bytes.


CREATE DATABASE SALES_VENDAS_02
ON ( NAME = SUCO_VENDAS_DAT,  
    FILENAME = 'C:\TEMP\DATA\SALES_VENDAS_02.mdf',  
    SIZE = 10,  
    MAXSIZE = 50,  
    FILEGROWTH = 5 )  
LOG ON  
( NAME = SUCOS_VENDAS_LOG,  
    FILENAME = 'C:\TEMP\DATA\SALES_VENDAS_02.ldf',  
    SIZE = 5MB,  
    MAXSIZE = 25MB,  
    FILEGROWTH = 5MB )

Criando Tabela
- CPF do cliente
- O nome completo
- Endereço ( Rua, bairro, cidade, estado e CEP )
- Data de nascimento
- A idade
- O sexo 
- O limite de crédito para ele comprar produtos
- O volume mínimo de sucos que ele pode comprar
- Se ele já realizou a primeira compra

Cadastro de Produtos
- Código do produto
- Nome do produto
- Embalagem
- Tamanho 
- Sabor
- Preço de Lista

Outro jeito de criar tabela:
- clica com o botão direito na pasta tabela dentro do database
- novo -> tabela
- coloque os campos que vc quer e os tipos de campos
- ctrl + S para salvar e colocar o nome da tabela

Para gerar o script de uma tabela que já está feita:
- clica com o botão direito em cima da tabela que vc quer o script
- script de tabela como -> create para -> janela do editor de nova consulta

Para apagar alguma tabela por script:
DROP TABLE NOME DA TABELA 

USE - Usando o banco de dados 
GO - Excuta o comando (preciosismo)

CREATE DATABASE SUCOS_VENDAS;

USE SUCOS_VENDAS;

DROP TABLE [TABELA DE CLIENTES]

Para inserir alguma informação na tabela:
INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO], [EMBALAGEM], [TAMANHO], [SABOR], [PREÇO DE LISTA])
VALUES 
('1040107', 'Light - 350 ml - Melância', 'Lata', '350 ml', 'Melância', 4.56)

Outra forma de inserir algum dado na tabela é:
- clica com o botão direito em cima da tabela que vc quer inserir um dado novo
- clica em Editar 200 linhas superiores
- Inserir o dado que vc quer na linha onde estiver o null

Para alterar um registro da tabela:
INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO], [EMBALAGEM], [TAMANHO], [SABOR], [PREÇO DE LISTA])
VALUES
('544931', 'Frescor do Verão - 350 ml - Limão', 'PET', '350 ml','Limão',3.20)

INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO], [EMBALAGEM], [TAMANHO], [SABOR], [PREÇO DE LISTA])
VALUES
('1078680', 'Frescor do Verão - 470 ml - Manga', 'Lata', '470 ml','Manga',5.18)

UPDATE [TABELA DE PRODUTOS] SET
[EMBALAGEM] = 'Lata',
[PREÇO DE LISTA] = 2.46
WHERE [CODIGO DO PRODUTO] = '544931'

UPDATE [TABELA DE PRODUTOS] SET
[EMBALAGEM] = 'Garrafa'
WHERE [CODIGO DO PRODUTO] = '1078680'

Outra forma de fazer a alteração é:
- clica com o botão direito em cima da tabela que vc quer mudar o registro
- editar 200 linhas superiores
- mudar oq vc quiser

Para excluir um registro da tabela:

DELETE FROM [TABELA DE PRODUTOS]
WHERE [CODIGO DO PRODUTO] = '1088126'

Chave primaria é um código que não se repete e é usado como identificador dos registro de sua tabela

INSERT INTO [TABELA DE PRODUTOS]
([CODIGO DO PRODUTO], [NOME DO PRODUTO], [EMBALAGEM], [TAMANHO], [SABOR], [PREÇO DE LISTA])
VALUES
('788975', 'Pedaços de Frutas - 1,5 Listros - Maça', 'PET', '1,5 L', 'Maça', 18.01)

DELETE FROM [TABELA DE PRODUTOS]
WHERE [CODIGO DO PRODUTO] = '788975'

Para alterar uma tabela que não tem chave primaria:
ALTER TABLE [TABELA DE PRODUTOS]
ADD CONSTRAINT PK_PRODUTOS
PRIMARY KEY CLUSTERED ([CODIGO DO PRODUTO])

Para modificar uma coluna que já está criada:
ALTER TABLE [TABELA DE PRODUTOS]
ALTER COLUMN [CODIGO DO PRODUTO]
VARCHAR(10) NOT NULL

Outra maneira de criar chaves primarias:
- clica com o botão direito sobre a tabela
- desing
- da para colocar outra coluna*
- seleciona a coluna com shift 
- botão direito do mouse clica em add chave primaria ou remover chave primaria
- clica em salvar no menu de cima 

Outra forma de fazer o insert:
- botão direito na tabela que vc quer inserir um novo registro
- script como
- insert para
- janela do editor de nova 

Para manipular datas e campos logicos:
 1 verdadeiro
 0 falso 
 null
 data = ano - mes - dia (padrão)

INSERT INTO [dbo].[TABELA DE CLIENTES]
           ([CPF]
           ,[NOME]
           ,[ENDERECO 1]
           ,[ENDERECO 2]
           ,[BAIRRO]
           ,[CIDADE]
           ,[ESTADO]
           ,[CEP]
           ,[DATA DE NASCIMENTO]
           ,[IDADE]
           ,[SEXO]
           ,[LIMITE DE CREDITO]
           ,[VOLUME DE COMPRA]
           ,[PRIMEIRA COMPRA])
     VALUES
           ('12345678910'
           ,'jOÃO DA SILVA'
           ,'RUA PROJETADA N°10'
           ,''
           ,'CENTRO'
           ,'SÃO PAULO'
           ,'SP'
           ,'09950300'
           ,'1990-10-25'
           ,27
           ,'M'
           ,120000.50
           ,1000
           ,1)


Para consultar as informações da tabela:

- O TOP depois do select quer dizer a quantidade que vc quer que liste pro exemplo: top 5 os 5 primeiros
- * verifica todas as colunas da tabela select *from nome da tabela 
- se quiser ver apenas algumas colunas especificas coloca apenas elas no comando:
	SELECT [CPF], [NOME] FROM [TABELA DE CLIENTES]
- se quiser colocar um apelido ou outro nome na coluna na hora que for fazer a exibição (chamado de alias):
	 SELECT [CPF] AS IDENTIFICADOR 
	,[NOME] AS CLIENTE
	FROM [TABELA DE CLIENTES]
- se vc quiser colocar de outra ordem, fazendo assim a ordem que vc quiser:
	SELECT [NOME] AS CLIENTE
	,[CPF] AS IDENTIFICADOR 
	FROM [TABELA DE CLIENTES]

Para filtrar:
- pode usar o where 
SELECT *FROM [TABELA DE PRODUTOS] WHERE [CODIGO DO PRODUTO] = '1000889'
SELECT *FROM [TABELA DE PRODUTOS] WHERE [SABOR] = 'LIMÃO'

- para listar filtrando por maior ou menor que um valor
SELECT *FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] > 4.555
SELECT *FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] < 4.555

SELECT *FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] <= 4.555
SELECT *FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] >= 4.555

O mesmo vale para campos que for string que usa como criterio a ordem alfabetica

SELECT *FROM [TABELA DE PRODUTOS] WHERE [EMBALAGEM] = 'Lata'

SELECT *FROM [TABELA DE PRODUTOS] WHERE [EMBALAGEM] > 'Lata'
SELECT *FROM [TABELA DE PRODUTOS] WHERE [EMBALAGEM] < 'Lata'

SELECT *FROM [TABELA DE PRODUTOS] WHERE [EMBALAGEM] >= 'Lata'
SELECT *FROM [TABELA DE PRODUTOS] WHERE [EMBALAGEM] <= 'Lata'

Temos tambem o diferente != ou <>
SELECT *FROM [TABELA DE PRODUTOS] WHERE [EMBALAGEM] != 'Lata'
SELECT *FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] <> 4.555

Para filtrar datas

SELECT *FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] = '1995-09-11'
SELECT *FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] > '1995-09-11'
SELECT *FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] < '1995-09-11'
SELECT *FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] >= '1995-09-11'
SELECT *FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] <= '1995-09-11'
SELECT *FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] != '1995-09-11'

FILTRAR POR ANO
SELECT *FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) = 1995
SELECT *FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) > 1995
SELECT *FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) < 1995
SELECT *FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) <= 1995
SELECT *FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) >= 1995

FILTRAR POR MÊS OS VALORES LOGICOS TAMBEM FUNCIONAM (=, <, >, <=, >=, !=, <>)
SELECT *FROM [TABELA DE CLIENTES] WHERE MONTH([DATA DE NASCIMENTO]) = 9

FILTRAR POR DIA:
SELECT *FROM [TABELA DE CLIENTES] WHERE DAY([DATA DE NASCIMENTO]) = 12

SELECT [CPF]
      ,[NOME]
      ,[ENDERECO 1]
      ,[ENDERECO 2]
      ,[BAIRRO]
      ,[CIDADE]
      ,[ESTADO]
      ,[CEP]
      ,[DATA DE NASCIMENTO]
      ,[IDADE]
      ,[SEXO]
      ,[LIMITE DE CREDITO]
      ,[VOLUME DE COMPRA]
      ,[PRIMEIRA COMPRA]
  FROM [SUCOS_VENDAS].[dbo].[TABELA DE CLIENTES]

SELECT * FROM [TABELA DE CLIENTES]

SELECT [CPF]
      ,[NOME]
    FROM [TABELA DE CLIENTES]

SELECT [CPF] AS IDENTIFICADOR
      ,[NOME] AS CLIENTE
    FROM [TABELA DE CLIENTES]

 SELECT 
		  [NOME] AS CLIENTE
		  ,[CPF] AS IDENTIFICADOR
          FROM [TABELA DE CLIENTES]

SELECT * FROM [TABELA DE PRODUTOS]

SELECT * FROM [TABELA DE PRODUTOS] WHERE [CODIGO DO PRODUTO] = '1000889'

SELECT * FROM [TABELA DE PRODUTOS] WHERE [SABOR] = 'Uva'

SELECT * FROM [TABELA DE PRODUTOS] WHERE [SABOR] = 'Limão'

SELECT * FROM [TABELA DE PRODUTOS] WHERE EMBALAGEM = 'PET'

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] = 4.555

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] > 10

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] < 10

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] <= 4.555

SELECT * FROM [TABELA DE PRODUTOS] WHERE [PREÇO DE LISTA] >= 4.555

SELECT * FROM [TABELA DE PRODUTOS] WHERE EMBALAGEM <= 'Lata'

SELECT * FROM [TABELA DE PRODUTOS] WHERE EMBALAGEM <> 'Lata'

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] = '1995-09-11'

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] >= '1995-09-11'

SELECT * FROM [TABELA DE CLIENTES] WHERE [DATA DE NASCIMENTO] <= '1995-09-11'

SELECT * FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) = 1995 

SELECT * FROM [TABELA DE CLIENTES] WHERE YEAR([DATA DE NASCIMENTO]) < 1995 

SELECT * FROM [TABELA DE CLIENTES] WHERE MONTH([DATA DE NASCIMENTO]) = 12

SELECT * FROM [TABELA DE CLIENTES] WHERE DAY([DATA DE NASCIMENTO]) = 11

